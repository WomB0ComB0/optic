// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CapturedIntearction.fromHarEntry can create a CapturedInteraction from a HttpArchive.Entry 1`] = `
{
  "request": {
    "body": null,
    "headers": [],
    "host": "petstore.swagger.io",
    "method": "get",
    "path": "/v2/store/inventory",
    "query": [],
  },
  "response": {
    "body": {
      "contentType": "application/json",
      "size": 133,
      "stream": Any<Readable>,
    },
    "headers": [],
    "statusCode": "200",
  },
}
`;

exports[`CapturedIntearction.fromHarEntry includes request bodies 1`] = `
{
  "request": {
    "body": {
      "contentType": "application/json",
      "size": 128,
      "stream": Any<Readable>,
    },
    "headers": [],
    "host": "petstore.swagger.io",
    "method": "post",
    "path": "/v2/store/order",
    "query": [],
  },
  "response": {
    "body": {
      "contentType": "application/json",
      "size": 119,
      "stream": Any<Readable>,
    },
    "headers": [],
    "statusCode": "200",
  },
}
`;

exports[`CapturedIntearction.fromHarEntry includes response bodies 1`] = `
{
  "request": {
    "body": null,
    "headers": [],
    "host": "petstore.swagger.io",
    "method": "get",
    "path": "/v2/store/inventory",
    "query": [],
  },
  "response": {
    "body": {
      "contentType": "application/json",
      "size": 133,
      "stream": Any<Readable>,
    },
    "headers": [],
    "statusCode": "200",
  },
}
`;

exports[`CapturedIntearction.fromHarEntry supports request body encoding for supported Buffer encodings 1`] = `
{
  "request": {
    "body": {
      "contentType": "application/json",
      "size": 128,
      "stream": Any<Readable>,
    },
    "headers": [],
    "host": "petstore.swagger.io",
    "method": "post",
    "path": "/v2/store/order",
    "query": [],
  },
  "response": {
    "body": {
      "contentType": "application/json",
      "size": 119,
      "stream": Any<Readable>,
    },
    "headers": [],
    "statusCode": "200",
  },
}
`;

exports[`CapturedIntearction.fromHarEntry supports response body encoding for supported Buffer encodings 1`] = `
{
  "request": {
    "body": null,
    "headers": [],
    "host": "petstore.swagger.io",
    "method": "get",
    "path": "/v2/store/inventory",
    "query": [],
  },
  "response": {
    "body": {
      "contentType": "application/json",
      "size": 133,
      "stream": Any<Readable>,
    },
    "headers": [],
    "statusCode": "200",
  },
}
`;

exports[`CapturedInteraction.fromPostmanEntry can create a CapturedInteraction from a PostmanEntry 1`] = `
{
  "request": {
    "body": {
      "contentType": null,
      "size": 0,
      "stream": Readable {
        "_events": {},
        "_eventsCount": 0,
        "_maxListeners": undefined,
        "_read": [Function],
        "_readableState": ReadableState {
          "autoDestroy": true,
          "awaitDrainWriters": null,
          "buffer": BufferList {
            "head": null,
            "length": 0,
            "tail": null,
          },
          "closeEmitted": false,
          "closed": false,
          "constructed": true,
          "dataEmitted": false,
          "decoder": null,
          "defaultEncoding": "utf8",
          "destroyed": false,
          "emitClose": true,
          "emittedReadable": false,
          "encoding": null,
          "endEmitted": false,
          "ended": false,
          "errorEmitted": false,
          "errored": null,
          "flowing": null,
          "highWaterMark": 16,
          "length": 0,
          "multiAwaitDrain": false,
          "needReadable": false,
          "objectMode": true,
          "pipes": [],
          "readableListening": false,
          "reading": false,
          "readingMore": false,
          "resumeScheduled": false,
          "sync": true,
          Symbol(kPaused): null,
        },
        Symbol(kCapture): false,
      },
    },
    "headers": [],
    "host": "postman-echo.com",
    "method": "get",
    "path": "/get",
    "query": [
      {
        "key": "foo1",
        "value": "bar1",
      },
      {
        "key": "foo2",
        "value": "bar2",
      },
    ],
  },
  "response": {
    "body": {
      "contentType": "application/json; charset=utf-8",
      "size": 482,
      "stream": Any<Readable>,
    },
    "headers": [
      {
        "key": "Content-Encoding",
        "value": "gzip",
      },
      {
        "key": "Content-Type",
        "value": "application/json; charset=utf-8",
      },
      {
        "key": "Date",
        "value": "Tue, 11 Jun 2019 10:43:13 GMT",
      },
      {
        "key": "ETag",
        "value": "W/"161-aLhNcsGArlgLSKbxPqfBW3viHPI"",
      },
      {
        "key": "Server",
        "value": "nginx",
      },
      {
        "key": "set-cookie",
        "value": "sails.sid=s%3AGz-wblZgXE8FCDq7aJpx_tUgZUcG3Nsw.LdNEN8L0C7nGWkvGLwvdw6R2s6Syjr%2FzkvyevA8qR0c; Path=/; HttpOnly",
      },
      {
        "key": "Vary",
        "value": "Accept-Encoding",
      },
      {
        "key": "Content-Length",
        "value": "249",
      },
      {
        "key": "Connection",
        "value": "keep-alive",
      },
    ],
    "statusCode": "200",
  },
}
`;

exports[`CapturedInteraction.fromPostmanEntry includes request bodies 1`] = `
{
  "request": {
    "body": {
      "contentType": "application/json",
      "size": 1188,
      "stream": Any<Readable>,
    },
    "headers": [
      {
        "key": "Content-Type",
        "value": "application/json",
      },
    ],
    "host": "postman-echo.com",
    "method": "post",
    "path": "/transform/collection",
    "query": [
      {
        "key": "from",
        "value": "1",
      },
      {
        "key": "to",
        "value": "2",
      },
    ],
  },
  "response": {
    "body": null,
    "headers": [],
    "statusCode": "200",
  },
}
`;

exports[`CapturedInteraction.fromPostmanEntry includes response bodies 1`] = `
{
  "request": {
    "body": {
      "contentType": null,
      "size": 0,
      "stream": Readable {
        "_events": {},
        "_eventsCount": 0,
        "_maxListeners": undefined,
        "_read": [Function],
        "_readableState": ReadableState {
          "autoDestroy": true,
          "awaitDrainWriters": null,
          "buffer": BufferList {
            "head": null,
            "length": 0,
            "tail": null,
          },
          "closeEmitted": false,
          "closed": false,
          "constructed": true,
          "dataEmitted": false,
          "decoder": null,
          "defaultEncoding": "utf8",
          "destroyed": false,
          "emitClose": true,
          "emittedReadable": false,
          "encoding": null,
          "endEmitted": false,
          "ended": false,
          "errorEmitted": false,
          "errored": null,
          "flowing": null,
          "highWaterMark": 16,
          "length": 0,
          "multiAwaitDrain": false,
          "needReadable": false,
          "objectMode": true,
          "pipes": [],
          "readableListening": false,
          "reading": false,
          "readingMore": false,
          "resumeScheduled": false,
          "sync": true,
          Symbol(kPaused): null,
        },
        Symbol(kCapture): false,
      },
    },
    "headers": [],
    "host": "postman-echo.com",
    "method": "get",
    "path": "/get",
    "query": [
      {
        "key": "foo1",
        "value": "bar1",
      },
      {
        "key": "foo2",
        "value": "bar2",
      },
    ],
  },
  "response": {
    "body": {
      "contentType": "application/json; charset=utf-8",
      "size": 482,
      "stream": Any<Readable>,
    },
    "headers": [
      {
        "key": "Content-Encoding",
        "value": "gzip",
      },
      {
        "key": "Content-Type",
        "value": "application/json; charset=utf-8",
      },
      {
        "key": "Date",
        "value": "Tue, 11 Jun 2019 10:43:13 GMT",
      },
      {
        "key": "ETag",
        "value": "W/"161-aLhNcsGArlgLSKbxPqfBW3viHPI"",
      },
      {
        "key": "Server",
        "value": "nginx",
      },
      {
        "key": "set-cookie",
        "value": "sails.sid=s%3AGz-wblZgXE8FCDq7aJpx_tUgZUcG3Nsw.LdNEN8L0C7nGWkvGLwvdw6R2s6Syjr%2FzkvyevA8qR0c; Path=/; HttpOnly",
      },
      {
        "key": "Vary",
        "value": "Accept-Encoding",
      },
      {
        "key": "Content-Length",
        "value": "249",
      },
      {
        "key": "Connection",
        "value": "keep-alive",
      },
    ],
    "statusCode": "200",
  },
}
`;

exports[`CapturedInteraction.fromProxyInteraction can create a CaturedInteraction from a ProxySource.Interaction 1`] = `
{
  "request": {
    "body": null,
    "headers": [],
    "host": "localhost",
    "method": "get",
    "path": "/test-path",
    "query": [],
  },
  "response": {
    "body": null,
    "headers": [],
    "statusCode": "200",
  },
}
`;

exports[`CapturedInteraction.fromProxyInteraction includes request bodies 1`] = `
{
  "request": {
    "body": {
      "contentType": "text/plain",
      "size": 9,
      "stream": Any<Readable>,
    },
    "headers": [],
    "host": "localhost",
    "method": "get",
    "path": "/test-path",
    "query": [],
  },
  "response": {
    "body": null,
    "headers": [],
    "statusCode": "200",
  },
}
`;

exports[`CapturedInteraction.fromProxyInteraction includes response bodies 1`] = `
{
  "request": {
    "body": null,
    "headers": [],
    "host": "localhost",
    "method": "get",
    "path": "/test-path",
    "query": [],
  },
  "response": {
    "body": {
      "contentType": null,
      "size": 0,
      "stream": Any<Readable>,
    },
    "headers": [],
    "statusCode": "200",
  },
}
`;
