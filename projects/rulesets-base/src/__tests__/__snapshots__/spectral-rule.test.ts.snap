// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`spectral rule test runs spectral rules on added 1`] = `
[
  {
    "docsLink": undefined,
    "error": "Error code: oas3-api-servers: OpenAPI "servers" must be present and non-empty array.",
    "exempted": false,
    "location": {
      "jsonPath": "",
      "spec": "before",
    },
    "name": "Spectral always rule",
    "passed": false,
    "severity": "warn",
    "type": "requirement",
    "where": "always ",
  },
  {
    "docsLink": undefined,
    "error": "Error code: openapi-tags: OpenAPI object must have non-empty "tags" array.",
    "exempted": false,
    "location": {
      "jsonPath": "",
      "spec": "before",
    },
    "name": "Spectral always rule",
    "passed": false,
    "severity": "warn",
    "type": "requirement",
    "where": "always ",
  },
  {
    "docsLink": undefined,
    "error": "Error code: operation-description: Operation "description" must be present and non-empty string.",
    "exempted": false,
    "location": {
      "jsonPath": "/paths/~1api/get",
      "spec": "before",
    },
    "name": "Spectral always rule",
    "passed": false,
    "severity": "warn",
    "type": "requirement",
    "where": "always ",
  },
  {
    "docsLink": undefined,
    "error": "Error code: operation-operationId: Operation must have "operationId".",
    "exempted": false,
    "location": {
      "jsonPath": "/paths/~1api/get",
      "spec": "before",
    },
    "name": "Spectral always rule",
    "passed": false,
    "severity": "warn",
    "type": "requirement",
    "where": "always ",
  },
  {
    "docsLink": undefined,
    "error": "Error code: operation-tags: Operation must have non-empty "tags" array.",
    "exempted": false,
    "location": {
      "jsonPath": "/paths/~1api/get",
      "spec": "before",
    },
    "name": "Spectral always rule",
    "passed": false,
    "severity": "warn",
    "type": "requirement",
    "where": "always ",
  },
  {
    "docsLink": undefined,
    "error": "Error code: operation-success-response: Operation must have at least one "2xx" or "3xx" response.",
    "exempted": false,
    "location": {
      "jsonPath": "/paths/~1api/get",
      "spec": "before",
    },
    "name": "Spectral always rule",
    "passed": false,
    "severity": "warn",
    "type": "requirement",
    "where": "always ",
  },
  {
    "docsLink": undefined,
    "error": "Error code: info-contact: Info object must have "contact" object.",
    "exempted": false,
    "location": {
      "jsonPath": "",
      "spec": "before",
    },
    "name": "Spectral always rule",
    "passed": false,
    "severity": "warn",
    "type": "requirement",
    "where": "always ",
  },
  {
    "docsLink": undefined,
    "error": "Error code: info-description: Info "description" must be present and non-empty string.",
    "exempted": false,
    "location": {
      "jsonPath": "",
      "spec": "before",
    },
    "name": "Spectral always rule",
    "passed": false,
    "severity": "warn",
    "type": "requirement",
    "where": "always ",
  },
  {
    "docsLink": undefined,
    "error": "Error code: info-license: Info object must have "license" object.",
    "exempted": false,
    "location": {
      "jsonPath": "",
      "spec": "before",
    },
    "name": "Spectral always rule",
    "passed": false,
    "severity": "warn",
    "type": "requirement",
    "where": "always ",
  },
  {
    "docsLink": undefined,
    "error": "Error code: license-url: License object must include "url".",
    "exempted": false,
    "location": {
      "jsonPath": "",
      "spec": "before",
    },
    "name": "Spectral always rule",
    "passed": false,
    "severity": "warn",
    "type": "requirement",
    "where": "always ",
  },
]
`;
